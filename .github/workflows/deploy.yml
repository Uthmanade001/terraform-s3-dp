name: Terraform Deploy to S3 and Invalidate CloudFront

on:
  push:
    branches:
      - develop
      - staging
      - prod
jobs:
  terraform-deploy:
    name: Deploy to S3 and Invalidate CloudFront
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.3 # use your version or latest stable

      - name: Set environment variables
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            echo "ENV_DIR=develop" >> $GITHUB_ENV
            echo "ENV_BUCKET=uthman-develop-2025" >> $GITHUB_ENV
            echo "DISTRIBUTION_ID=${{ secrets.DEVELOP_CLOUDFRONT_DISTRIBUTION_ID }}" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/staging" ]]; then
            echo "ENV_DIR=staging" >> $GITHUB_ENV
            echo "ENV_BUCKET=uthman-staging-2025" >> $GITHUB_ENV
            echo "DISTRIBUTION_ID=${{ secrets.STAGING_CLOUDFRONT_DISTRIBUTION_ID }}" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "ENV_DIR=prod" >> $GITHUB_ENV
            echo "ENV_BUCKET=uthman-production-2025" >> $GITHUB_ENV
            echo "DISTRIBUTION_ID=${{ secrets.PROD_CLOUDFRONT_DISTRIBUTION_ID }}" >> $GITHUB_ENV
          fi

      - name: Terraform Init
        run: cd $ENV_DIR && terraform init

      - name: Terraform Apply
        run: cd $ENV_DIR && terraform apply -auto-approve -var="uthman-production-2025=${{ env.ENV_BUCKET }}"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Invalidate CloudFront Cache
        run: |
          echo "Invalidating CloudFront cache for Distribution ID: $DISTRIBUTION_ID ..."
          aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths "/*"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
